version: "3"
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    container_name: dnmp-nginx
    environment:
      TZ: "$TZ"
    networks:
      docker_net:
        ipv4_address: ${NGINX_IP}

  jenkins:
    image: jenkinsci/blueocean
    container_name: dnmp-jenkins
    ports:
      - "${Jenkins_HOST_PORT}:8080"
      - '50000:50000'
    volumes:
      - ${Jenkins_DIR}:/var/jenkins_home
      - ${LOCALTIME_DIR}:/etc/localtime:ro
      - ${TIMEZONE_DIR}:/etc/timezone:ro
    environment:
      TZ: "$TZ"
    networks:
      docker_net:
        ipv4_address: ${Jenkins_IP}
      
  php73:
    build:
      context: .
      args:
        PHP_VERSION: ${PHP73_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php73.sh
        TZ: "$TZ"
    ports:
      - "${XDEBUG73_HOST_PORT}:${XDEBUG73_HOST_PORT}"
      - "${SWOOLE73_HOST_PORT}:${SWOOLE73_HOST_PORT}"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP73_LOG_DIR}:/var/log/php   
    restart: always
    container_name: dnmp-php73
    cap_add:
      - SYS_PTRACE
    networks:
      docker_net:
        ipv4_address: ${PHP73_IP}

  php56:
    build:
      context: .
      args:
        PHP_VERSION: ${PHP56_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php56.sh
        TZ: "$TZ"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_DIR}:/var/log/php
    cap_add:
      - SYS_PTRACE
    container_name: dnmp-php56
    networks:
      docker_net:
        ipv4_address: ${PHP56_IP}

  mysql:
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    container_name: dnmp-mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      docker_net:
        ipv4_address: ${MYSQL_IP}
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    container_name: dnmp-redis
    environment:
      TZ: "$TZ"
    networks:
      docker_net:
        ipv4_address: ${REDIS_IP}

  mongodb:
    image: mongo:${MONGODB_VERSION}
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${MONGODB_DATA_DIR}:/data/db:rw
      - ${MONGODB_DATA_DIR}/mongo_key:/mongo:rw
    ports:
       - "${MONGODB_HOST_PORT}:27017"
    networks:
        docker_net:
        ipv4_address: ${Mongo_IP}
    command:
       --auth

  adminmongo:
    image: mrvautin/adminmongo
    ports:
      - "${ADMINMONGO_HOST_PORT}:1234"
    environment:
      - HOST=0.0.0.0
      - DB_HOST=mongodb
      - DB_PORT=27017
    networks:
        docker_net:
        ipv4_address: ${ADMINMongo_IP}

  
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    ports:
      - "${RABBITMQ_WEB_PORT}:15672"
      - "${RABBITMQ_HOST_PORT}:5672"
    environment:
      TZ: "$TZ"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}" 
    container_name: dnmp-rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      docker_net:
        ipv4_address: ${RABBITMQ_IP}       
    
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    networks:
      docker_net:
        ipv4_address: ${MYSQL_ADMIN_IP}
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:latest
    ports:
      - "${REDISMYADMIN_HOST_PORT}:80"
    networks:
      docker_net:
        ipv4_address: ${REDIS_ADMIN_IP}
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379

  portainer:
    image: portainer/portainer:latest
    ports:
      - "${PORTAINER_HOST_PORT}:9000"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:cached
      - ./portainer/:/data:cached
    networks:
      docker_net:
        ipv4_address: ${PORTAINER_IP}

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    container_name: dnmp-elasticsearch
    environment:
      - TZ="$TZ"
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${ELASTICSEARCH_DATA_DIR}:/usr/share/elasticsearch/data
    hostname: elasticsearch
    restart: always
    ports:
      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
      - "${ELASTICSEARCH_HOST_PORT_S}:9300"
    networks:
      docker_net:
        ipv4_address: ${Elasticsearch_IP}   

  kibana:
    image: kibana:${KIBANA_VERSION}
    container_name: dnmp-kibana
    environment:
      TZ: "$TZ"
      elasticsearch.hosts: http://elasticsearch:9200
    hostname: kibana
    depends_on:
      - elasticsearch
    restart: always
    ports:
      - "${KIBANA_HOST}:5601"
    networks:
      docker_net:
        ipv4_address: ${Kibana_IP}   

  logstash:
    image: logstash:${LOGSTASH_VERSION}
    container_name: dnmp-logstash
    hostname: logstash
    restart: always
    depends_on:
      - elasticsearch
    environment:
      TZ: "$TZ"
    ports:
      - "${LOGSTASH_HOST_PORT_C}:9600"
      - "${LOGSTASH_HOST_PORT_S}:5044"
    networks:
      docker_net:
        ipv4_address: ${Logstash_IP}     

volumes:
  esdata:
    driver: local

networks:
  docker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: "${DOCKER_SUBNET}"
          