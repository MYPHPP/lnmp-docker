version: "3"
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    container_name: dnmp-nginx
    networks:
      docker_net:
        ipv4_address: ${NGINX_IP}

  php73:
    build:
      context: .
      args:
        PHP_VERSION: ${PHP73_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php73.sh
        TZ: "$TZ"
    ports:
      - "${XDEBUG73_HOST_PORT}:${XDEBUG73_HOST_PORT}"
      - "${SWOOLE73_HOST_PORT}:${SWOOLE73_HOST_PORT}"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP73_LOG_DIR}:/var/log/php
    restart: always
    container_name: dnmp-php73
    cap_add:
      - SYS_PTRACE
    networks:
      docker_net:
        ipv4_address: ${PHP73_IP}

  mysql:
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    container_name: dnmp-mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      docker_net:
        ipv4_address: ${MYSQL_IP}
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    container_name: dnmp-redis
    environment:
      TZ: "$TZ"
    networks:
      docker_net:
        ipv4_address: ${REDIS_IP}


networks:
  docker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: "${DOCKER_SUBNET}"
